package com.example.projectshop.login;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.Optional;

@Service
public class CustomerService {

    private final CustomerRepository customerRepository;

    // ‚úÖ Constructor Injection ‡πÅ‡∏ó‡∏ô Autowired ‡πÅ‡∏ö‡∏ö field
    public CustomerService(CustomerRepository customerRepository) {
        this.customerRepository = customerRepository;
    }

    // üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    public Optional<Customer> findByEmail(String email) {
        return customerRepository.findByEmail(email);
    }

    // üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
    public Optional<Customer> findByEmailAndPassword(String email, String password) {
        return customerRepository.findByEmailAndPassword(email, password);
    }

    // ‚úÖ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î Role USER
    public Customer registerNewCustomer(Customer customer) {
        customer.setRole(Role.USER); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Role ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        return customerRepository.save(customer);
    }

    // ‚úÖ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Role ‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô Admin ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)
    public Optional<Customer> updateCustomerRole(Long customerId, Role newRole) {
        Optional<Customer> customerOptional = customerRepository.findById(customerId);
        if (customerOptional.isPresent()) {
            Customer customer = customerOptional.get();
            customer.setRole(newRole);
            customerRepository.save(customer);
            return Optional.of(customer);
        } else {
            return Optional.empty();
        }
    }

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏•‡πá‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Role ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à)
    public boolean updateUserProfile(String name, String email, String address, String phone, MultipartFile profileImage) {
        Optional<Customer> customerOptional = customerRepository.findByEmail(email);
        if (customerOptional.isPresent()) {
            Customer customer = customerOptional.get();

            Role currentRole = customer.getRole(); // üîê ‡πÄ‡∏Å‡πá‡∏ö Role ‡πÄ‡∏î‡∏¥‡∏°

            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
            customer.setName(name);
            customer.setAddress(address);
            customer.setPhone(phone);

            if (profileImage != null && !profileImage.isEmpty()) {
                try {
                    String fileName = profileImage.getOriginalFilename();
                    String uploadDir = "uploads/";
                    File uploadPath = new File(uploadDir);
                    if (!uploadPath.exists()) {
                        uploadPath.mkdirs();
                    }

                    String filePath = uploadDir + fileName;
                    File dest = new File(filePath);
                    profileImage.transferTo(dest);

                    customer.setProfileImage(filePath);
                } catch (IOException e) {
                    e.printStackTrace();
                    return false;
                }
            }

            customer.setRole(currentRole); // üîê ‡πÉ‡∏™‡πà Role ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡∏•‡∏±‡∏ö
            customerRepository.save(customer);
            return true;
        }
        return false;
    }

}